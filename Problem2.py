'''Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
'''

# I used this to practice class and lambda functions.

fib_list = [1, 2]

def fibbonaci(starting_list):
    while starting_list[-1] < 4000000:
        x = lambda a, b: a + b
        fib_list.append(x(starting_list[-2], starting_list[-1]))
    return starting_list


fib_list = fibbonaci(fib_list)


class IsTwo:
    def __init__(self, in_number, divisible = False):
        self.in_number = in_number
        self.divisible = divisible

    def div_by_two(self):
        if self.in_number % 2 == 0:
            self.divisible = True
        return self.divisible


total = 0

for i in fib_list[0:-1]:
    x = IsTwo(i)
    if x.div_by_two() == True:
        total += i

print(total)